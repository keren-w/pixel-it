{"version":3,"sources":["assets/images/Pixelit_svg.svg","assets/images/upload.svg","assets/images/upload-icon.svg","modules/Header/Header.js","modules/common/styles.js","modules/UploaderView/components/UploaderLogic.js","modules/UploaderView/data/validator.js","modules/UploaderView/components/UploaderView.js","modules/ImageView/data/selectors.js","modules/UploaderView/components/PhotoUploaderContainer.js","modules/ImageView/data/actions.js","modules/App/data/actions.js","modules/Pixelizer/components/Pixelizer.js","modules/Pixelizer/data/actions.js","modules/Pixelizer/components/PixelizerContainer.js","modules/ImageView/components/OriginalImage.js","modules/ImageView/components/Slider.js","modules/Pixelizer/data/constants.js","modules/ImageView/components/viewerRenderServices/pixelizedViewService.js","modules/ImageView/components/viewerRenderServices/canvasService.js","modules/common/theme.js","modules/ImageView/components/ImageTitleBar.js","modules/ImageView/components/PhotoViewer.js","modules/Pixelizer/data/selectors.js","modules/Pixelizer/data/computedSelectors.js","modules/ImageView/components/PhotoViewerContainer.js","modules/App/components/Toaster.js","modules/App/components/App.js","modules/App/data/selectors.js","modules/App/data/computedSelectors.js","modules/App/components/AppContainer.js","serviceWorker.js","modules/ImageView/data/reducer.js","modules/App/data/reducer.js","modules/Pixelizer/data/reducer.js","store/reducer.js","modules/Pixelizer/data/saga.js","store/saga.js","store/store.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","HeaderWrapper","src","logo","alt","styled","div","_templateObject","_ref","theme","logoColor","ButtonWrapper","styles_templateObject","buttonColor","Uploader","handlePhotoUpload","setShowToaster","hideUploaderButton","inputRef","useRef","useEffect","current","event","MouseEvent","view","window","bubbles","cancelable","dispatchEvent","style","visibility","className","ref","id","type","accept","onInput","e","_e$target","target","files","file","length","validationResult","size","isValid","message","concat","getPhotoInputValidationResult","value","PhotoUploader","name","UploaderLogic","UploderWrapper","UploaderFrame","uploadSymbol","htmlFor","FileName","UploaderView_templateObject","_templateObject2","borderColor","span","_templateObject3","get","state","uploadedPhoto","getPhotoName","getPhotoFile","getShouldHideUploaderButton","mapDispatchToProps","photoDetails","payload","toasterMessage","PhotoUploaderContainer","connect","UploaderView","Pixelizer","isHidden","pixelizerClicked","Wrapper","PixelitButtonWrapper","disabled","onClick","Pixelizer_templateObject","Pixelizer_templateObject2","PIXELIZER_ACTIVATED","updateRenderType","newType","PixelizerContainer","OriginalImage","ImageWrapper","Image","attrs","height","imageMeasures","width","sliderPosition","transition","position","top","left","overflow","zIndex","OriginalImage_templateObject","img","OriginalImage_templateObject2","Slider","onMouseDown","forwardRef","SliderWrapper","draggable","onDragStart","preventDefault","TopSeperator","Arrow","BottomSeperator","slider","arrowSize","cursor","Slider_templateObject","Slider_templateObject2","_ref2","borderSize","_ref3","Slider_templateObject3","_ref4","_ref5","sliderHypotenuse","_ref6","separatorLeft","_templateObject4","RENDER_TYPE","DEFAULT","PIXELED","DEFAULT_PIXEL_SIZE","Pixel","x","y","color","Object","classCallCheck","this","ctx","beginPath","fillStyle","fillRect","stroke","PixeledImage","_this","bitmapImg","arguments","undefined","getImagePixelizedArray","pixelizedImg","pixelSize","newColumn","pixel","calculatePixel","push","i","j","pixelColor","red","green","blue","alpha","imageData","data","Math","pow","drawPixeledImagefromArray","pixeledArray","clearRect","forEach","column","draw","createImageBitmap","resizeHeight","resizeWidth","resizeQuality","then","resizedImage","getImageData","createClass","key","canvasWidth","canvasHeight","pixelsArray","canvasElement","currentPixeledImage","sqrt","SLIDER_ARROW_SIZE","backgroundGradientLight","backgroundGradientDark","ImageTitleBar","handleUploadRequest","ImageTitleBar_Wrapper","ActionWrapper","uploadIcon","ImageTitleBar_templateObject","ImageTitleBar_templateObject2","PhotoViewer","showSlider","renderConfig","canvasRef","sliderRef","_useState","useState","_useState2","slicedToArray","setCanvasElement","_useState3","_useState4","imageSource","setImageSource","_useState5","_useState6","showLoader","setShowLoader","_useState7","_useState8","setSliderPosition","_useState9","_useState10","isMouseDown","setIsMouseDown","_useState11","_useState12","transitionTimer","setTransitionTimer","canvasEl","getContext","renderImage","clearTimeout","_canvasElement$parent","parentElement","isPortaitOrientation","scaledImageHeight","parseInt","scaledimageWidth","calculatedPortraitSize","calculatedLandscapeSize","canvasService","offsetHeight","offsetWidth","renderType","renderParams","renderPixeledImage","drawImage","getImageProps","reader","FileReader","readAsDataURL","onload","result","inBetween","actual","min","max","setSliderTransition","setTimeout","stopDrag","onDrag","currentX","pageX","getBoundingClientRect","moveTo","updateSilderPosition","PhotoViewer_Wrapper","components_ImageTitleBar","Loader","ViewerFlexWrapper","showContent","onMouseUp","onMouseEnter","buttons","onMouseMove","ViewerSizeWrapper","components_Slider","components_OriginalImage","components_PixelizerContainer","PhotoViewer_templateObject","PhotoViewer_templateObject2","PhotoViewer_templateObject3","PhotoViewer_templateObject4","getRenderConfig","getShowSlider","selectors","PhotoViewerContainer","Toaster","dismissToaster","alert","Backdrop","Toaster_templateObject","App","showToaster","displayViewer","displayUploader","styled_components_browser_esm","AppWrapper","modules_Header_Header","components_PhotoViewerContainer","components_PhotoUploaderContainer","Toaster_Toaster","App_templateObject","app","getShowToaster","getToasterMessage","getShouldDisplayUploader","getShouldDisplayViewer","AppContainer","Boolean","location","hostname","match","defaultState","action","objectSpread","combineReducers","photoDetailsReducer","handlePixerlizerActivated","saga","regenerator_default","wrap","_context","prev","next","select","sent","put","pixelizerActions","stop","_marked","_context2","all","takeLatest","_marked2","pixelizerSaga","saga_marked","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","apply","run","rootSaga","ReactDOM","render","Provider","components_AppContainer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab05ae6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Pixelit_svg.f3bf0b34.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.e86a473b.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload-icon.7c4eb3b9.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport logo from \"../../assets/images/Pixelit_svg.svg\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <HeaderWrapper>\r\n            <img src={logo} alt={'Pixel It!'}/>\r\n        </HeaderWrapper>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n\r\nconst HeaderWrapper = styled.div`\r\n    font-size: 32px;\r\n    color: ${({theme}) => theme.logoColor};\r\n    width: 100%;\r\n    margin-top: 5px;\r\n    padding-left: 2rem;\r\n\r\n    img {\r\n        height: 25px;\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const ButtonWrapper = styled.div `\r\nmargin: 25px 0;\r\nwidth: 60%;\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\njustify-content: center;\r\nalign-items: baseline;\r\n\r\nlabel, button {\r\n    position: relative;\r\n    font-size: 1.15em;  \r\n    background-color: ${({theme}) => theme.buttonColor};\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 5px;\r\n    box-shadow: rgba(0,0,0,0.2) -1px 22px 20px 2px;\r\n    border: none;\r\n    margin: 0;\r\n    height: 5.5rem;\r\n    width: 14rem;\r\n\r\n    &:hover !&[disabled] {\r\n        background-color: rgba(7,7,7,0.2);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n    &[disabled] {\r\n        color: rgba(255,255,255,.2);\r\n        box-shadow: rgba(0,0,0,.6) 2px 2px 6px;\r\n    }\r\n}\r\n\r\n#photo-input {\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    opacity: 0;\r\n    position: absolute;\r\n}\r\n`;","import React, {useRef, useEffect} from 'react';\r\nimport {getPhotoInputValidationResult} from \"../data/validator\";\r\n\r\nconst Uploader = (props) => {\r\n\tconst {handlePhotoUpload, setShowToaster, hideUploaderButton} = props\r\n\tconst inputRef = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (hideUploaderButton && inputRef) {\r\n\t\t\tconst {current} = inputRef;\r\n\t\t\tconst event = new MouseEvent('click', {\r\n\t\t\t\tview: window,\r\n\t\t\t\tbubbles: true,\r\n\t\t\t\tcancelable: true\r\n\t\t\t  });\r\n\t\t\tcurrent.dispatchEvent(event);\r\n\t\t}\r\n\r\n\t}, [inputRef]);\r\n\r\n\t\t\t\tconst checkInput = (e) => {\r\n\t\t\t\t\t\t\t\tconst {files, accept} = e.target;\r\n\t\t\t\t\t\t\t\tconst file = files.length > 0 && files[0];\r\n\r\n\t\t\t\t\t\t\t\tconst validationResult = getPhotoInputValidationResult(file, accept);\r\n\t\t\t\t\t\t\t\tconst {isValid, message} = validationResult;\r\n\r\n\t\t\t\t\t\t\t\tif (!isValid) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetShowToaster(message);\r\n\t\t\t\t\t\t\t\t\t\t\t\te.target.value = null; // nullify input so to revalidate onChange\r\n\r\n\t\t\t\t\t\t\t\t} else if (file) {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandlePhotoUpload(file);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (<input\r\n\t\t\t\t\t\t\t\tstyle={{visibility: hideUploaderButton ? `hidden` : `visible`}}\r\n\t\t\t\t\t\t\t\tclassName=\"user-file\"\r\n\t\t\t\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\t\t\t\tid=\"photo-input\"\r\n\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\taccept=\"image/jpeg\"\r\n\t\t\t\t\t\t\t\tonInput={checkInput}/>);\r\n}\r\n\r\nexport default Uploader;","const TOP_LIMIT_SIZE = 2097152;\r\n\r\nexport const getPhotoInputValidationResult = (file, accept) => {\r\n    const {type, size} = file;\r\n\r\n    if (type && type !== accept) {\r\n        //throw error wrong file type\r\n        return {isValid: false, message: `Please select only files of type ${accept}`}\r\n    }\r\n\r\n    if (size && size > TOP_LIMIT_SIZE) {\r\n        // throw error large file\r\n        return {isValid: false, message: 'please upload a file below 2 MB'};\r\n    }\r\n\r\n    return {isValid: true, message: ''}\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {ButtonWrapper} from \"../../common/styles\";\r\nimport uploadSymbol from \"../../../assets/images/upload.svg\";\r\nimport Uploader from \"./UploaderLogic\";\r\n\r\nconst PhotoUploader = (props) => {\r\n\t\t\t\tconst {name, hideUploaderButton} = props;\r\n\t\t\t\treturn ( hideUploaderButton ?\r\n\t\t\t\t\t<Uploader {...props} /> :\r\n\t\t\t\t\t\t\t\t<UploderWrapper>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<UploaderFrame>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={uploadSymbol} alt={'Upload'}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"file\">Upload\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Uploader {...props} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{name && <FileName>{name}</FileName>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</UploaderFrame>\r\n\t\t\t\t\t\t\t\t</UploderWrapper>\r\n\t\t\t\t);\r\n}\r\n\r\nexport default PhotoUploader;\r\n\r\nconst UploderWrapper = styled(ButtonWrapper)`\r\n\tmargin: 0;\r\n\tflex: 1;\r\n\talign-items: center;\r\n\t#photo-input {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\topacity: 0;\r\n\t\tposition: absolute;\r\n\t}\r\n`;\r\n\r\nconst UploaderFrame = styled.div`\r\n\tborder: 2px solid ${({theme}) => theme.borderColor};\r\n\tborder-radius: 8px;\r\n    height: 70%;\r\n    width: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tmargin-bottom: 6rem;\r\n\r\n\timg {\r\n\t\twidth: 88px;\r\n\t\theight: calc(50% - 2rem);\r\n    \tmargin-top: 2rem;\r\n}\r\n\t}\r\n`;\r\n\r\nconst FileName = styled.span `\r\n\tmargin-top: 1rem;\r\n\tcolor: white;\r\n\tfont-size: 0.85rem;\r\n\tmargin-left: 1.5rem;\r\n`;","const get = state => state.uploadedPhoto;\r\n\r\nexport const getPhotoName = state => get(state).name;\r\nexport const getPhotoFile = state => get(state).file;\r\nexport const getShouldHideUploaderButton = state => get(state).hideUploaderButton;\r\n","import {connect} from 'react-redux';\r\nimport UploaderView from './UploaderView'\r\nimport {handlePhotoUpload} from \"../../ImageView/data/actions\";\r\nimport {setShowToaster} from \"../../App/data/actions\";\r\nimport {getShouldHideUploaderButton} from \"../../ImageView/data/selectors\";\r\nimport {getPhotoName} from \"../../ImageView/data/selectors\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    name: getPhotoName(state),\r\n    hideUploaderButton: getShouldHideUploaderButton(state),\r\n});\r\n\r\nconst mapDispatchToProps = ({\r\n    handlePhotoUpload,\r\n    setShowToaster\r\n});\r\n\r\nconst PhotoUploaderContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UploaderView);\r\n\r\nexport default PhotoUploaderContainer;\r\n\r\n\r\n\r\n\r\n","export const HANDLE_PHOTO_UPLOADED = 'MODULES/IMAGE_VIEW/PHOTO_UPLOADED';\r\nexport const HANDLE_UPLOAD_REQUEST = 'MODULES/IMAGE_VIEW/HANDLE_UPLOAD_REQUEST';\r\n\r\n/**\r\n * Calls action when a valid photo was uploaded\r\n */\r\nexport const handlePhotoUpload = photoDetails => ({\r\n    type: HANDLE_PHOTO_UPLOADED,\r\n    payload: photoDetails,\r\n});\r\n\r\nexport const handleUploadRequest = () => ({\r\n    type: HANDLE_UPLOAD_REQUEST,\r\n});","export const SHOW_TOASTER = 'MODULES/PHOTO_VIEWER/SHOW_TOASTER';\r\nexport const DISMISS_TOASTER = 'MODULES/PHOTO_VIEWER/TOASTER_DISMISSED';\r\n\r\n/**\r\n * Calls action when a valid photo was uploaded\r\n */\r\nexport const setShowToaster = (toasterMessage) => ({\r\n    type: SHOW_TOASTER,\r\n    payload: toasterMessage\r\n});\r\n\r\nexport const dismissToaster = () => ({\r\n    type: DISMISS_TOASTER\r\n});","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {ButtonWrapper} from \"../../common/styles\";\r\n\r\nconst Pixelizer = (props) => {\r\n\t\tconst {isHidden, pixelizerClicked} = props;\r\n\t\treturn (\r\n\t\t\t\t<Wrapper isHidden={isHidden}>\r\n\t\t\t\t\t\t<PixelitButtonWrapper>\r\n\t\t\t\t\t\t\t\t<button disabled={false} className=\"pixelizer\" onClick={pixelizerClicked}>Pixel it!</button>\r\n\t\t\t\t\t\t</PixelitButtonWrapper>\r\n\t\t\t\t</Wrapper>\r\n\t\t)\r\n}\r\n\r\nexport default Pixelizer;\r\n\r\nconst Wrapper = styled.div `\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tvisibility: ${props => props.isHidden\r\n\t\t? `hidden`\r\n\t\t: `visible`}\r\n`;\r\n\r\nconst PixelitButtonWrapper = styled(ButtonWrapper)`\r\nbutton {\r\n\theight: 4rem;\r\n}`;","export const PIXELIZER_ACTIVATED = 'MODULES/PIXELIZER/PIXELIZER_ACTIVATED';\r\nexport const UPDATE_RENDER_TYPE = 'MODULES/PIXELIZER/UPDATE_RENDER_TYPE';\r\nexport const UPDATE_RENDER_PARAMS = 'MODULES/PIXELIZER/UPDATE_RENDER_PARAMS';\r\n/**\r\n * Calls action when a valid photo was uploaded\r\n */\r\nexport const handlePixelizerActivated = photoDetails => ({\r\n    type: PIXELIZER_ACTIVATED\r\n});\r\n\r\nexport const updateRenderType = newType => ({\r\n    type: UPDATE_RENDER_TYPE,\r\n    payload: newType\r\n});","import {connect} from 'react-redux';\r\nimport Pixelizer from './Pixelizer';\r\nimport {handlePixelizerActivated} from '../data/actions';\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = ({\r\n    pixelizerClicked: handlePixelizerActivated\r\n});\r\n\r\nconst PixelizerContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Pixelizer);\r\n\r\nexport default PixelizerContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst OriginalImage = (props) => {\r\n    const {src} = props;\r\n\r\n    return (\r\n        <ImageWrapper id={'photo-input'}>\r\n            <Image src={src}/>\r\n        </ImageWrapper>\r\n    )\r\n}\r\n\r\nexport default OriginalImage;\r\n\r\nconst ImageWrapper = styled.div.attrs(props => ({\r\n    id: props.id,\r\n    style: {\r\n        height: `${props.theme.imageMeasures.height}px`,\r\n        width: `${props.theme.sliderPosition}px`,\r\n        transition: props.theme.transition,\r\n        position: `absolute`,\r\n        top: 0,\r\n        left: 0,\r\n        overflow: `hidden`,\r\n        zIndex: 1\r\n    },\r\n  }))``;\r\n  \r\nconst Image = styled.img `\r\n    height: 100%;\r\n`;","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Slider = (props) => {\r\n    const {onMouseDown, forwardRef} = props;\r\n    return (\r\n        <SliderWrapper\r\n            draggable\r\n            onDragStart={e => e.preventDefault()}\r\n            onMouseDown={onMouseDown}\r\n            ref={forwardRef}\r\n           >\r\n            <TopSeperator/>\r\n            <Arrow/>\r\n            <BottomSeperator/>\r\n        </SliderWrapper>\r\n    )\r\n}\r\n\r\nexport default Slider;\r\n\r\nconst SliderWrapper = styled.span.attrs(props => ({\r\n    style: {\r\n        height: `${props.theme.imageMeasures.height}px`,\r\n        width: `${props.theme.slider.arrowSize}px`,\r\n        position: `absolute`,\r\n        top: 0,\r\n        left: `${props.theme.sliderPosition-props.theme.slider.arrowSize/2}px`,\r\n        cursor:` col-resize`,\r\n        zIndex: 2\r\n    },\r\n  }))``;\r\n\r\nconst Arrow = styled.span `\r\n    height: ${({theme}) => theme.slider.arrowSize}px;\r\n    width: 100%;\r\n    border: ${({theme}) => theme.slider.borderSize}px solid white;\r\n    position: absolute;\r\n    top: ${({theme}) => theme.imageMeasures.height/2-theme.slider.arrowSize/2}px; /* offset between two elements*/\r\n    left: 0;\r\n    transform: rotate(45deg);\r\n`;\r\nconst TopSeperator = styled.div `\r\n    width: ${({theme}) => theme.slider.borderSize}px;\r\n    background-color: white;\r\n    height: ${({theme}) => theme.imageMeasures.height/2-theme.slider.sliderHypotenuse/2}px;\r\n    left: ${({theme}) => theme.slider.separatorLeft}px;\r\n    position: absolute;\r\n    top: 0;\r\n`;\r\nconst BottomSeperator = styled(TopSeperator)`\r\n    top: unset;\r\n    bottom: 0;\r\n`;","export const RENDER_TYPE = {\r\n    DEFAULT: 'PHOTO_VIEW',\r\n    PIXELED: 'PIXELED'\r\n};","const DEFAULT_PIXEL_SIZE = 25;\r\nclass Pixel {\r\n    constructor(size, x, y, color) {\r\n        this.height = size;\r\n        this.width = size;\r\n        this.color = color;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.beginPath()\r\n        ctx.fillStyle = this.color;\r\n        ctx.fillRect(this.x, this.y, this.width, this.height);\r\n        ctx.stroke();\r\n    }\r\n};\r\n\r\nexport class PixeledImage {\r\n\r\n    constructor(bitmapImg = null, height = 0, width = 0, ctx = null) {\r\n        this.bitmapImg = bitmapImg;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.pixelSize = DEFAULT_PIXEL_SIZE;\r\n        if (bitmapImg && height && width && ctx) {\r\n             createImageBitmap(bitmapImg, {\r\n                resizeHeight: height,\r\n                resizeWidth: width,\r\n                resizeQuality: 'high'\r\n            }).then(resizedImage => {\r\n                this.imageData = ctx.getImageData(0, 0, resizedImage.width, resizedImage.height);\r\n            });\r\n        }\r\n    }\r\n\r\n    renderPixeledImage(ctx, {pixelSize}, canvasWidth, canvasHeight) {\r\n        if (pixelSize && pixelSize !== this.pixelSize) {\r\n            this.pixelSize = pixelSize;\r\n        };\r\n        if (this.imageData) {\r\n            const pixelsArray = this.getImagePixelizedArray();\r\n            this.drawPixeledImagefromArray(ctx, pixelsArray, canvasWidth, canvasHeight);\r\n        }\r\n    }\r\n\r\n    getImagePixelizedArray = () => {\r\n        let x,\r\n            y,\r\n            pixelizedImg = [];\r\n        // Looping imageData in pixelSize chunks\r\n        for (x = 0; x < this.width; x += this.pixelSize) {\r\n            let newColumn = []\r\n            for (y = 0; y < this.height; y += this.pixelSize) {\r\n                let pixel = this.calculatePixel(x, y);\r\n                newColumn.push(pixel);\r\n            }\r\n            pixelizedImg.push(newColumn);\r\n        }\r\n        return pixelizedImg;\r\n\r\n    };\r\n\r\n    calculatePixel = (x, y) => {\r\n        let i,\r\n            j,\r\n            pixelColor = {\r\n                red: 0,\r\n                green: 0,\r\n                blue: 0,\r\n                alpha: 0\r\n            }\r\n        for (i = 0; i < this.pixelSize; ++i) {\r\n            for (j = 0; j < this.pixelSize; ++j) {\r\n                pixelColor.red += this.imageData.data[((this.width * y) + x) * 4]\r\n                pixelColor.green += this.imageData.data[((this.width * y) + x) * 4 + 1]\r\n                pixelColor.blue += this.imageData.data[((this.width * y) + x) * 4 + 2]\r\n                pixelColor.alpha += this.imageData.data[((this.width * y) + x) * 4 + 3]\r\n            }\r\n        }\r\n        pixelColor.red = pixelColor.red / Math.pow(this.pixelSize, 2)\r\n        pixelColor.green = pixelColor.green / Math.pow(this.pixelSize, 2)\r\n        pixelColor.blue = pixelColor.blue / Math.pow(this.pixelSize, 2)\r\n        pixelColor.alpha = pixelColor.alpha / Math.pow(this.pixelSize, 2)\r\n        pixelColor = `rgba(${pixelColor.red},${pixelColor.green},${pixelColor.blue},${pixelColor.alpha})`\r\n        return new Pixel(this.pixelSize, x, y, pixelColor)\r\n    };\r\n\r\n    drawPixeledImagefromArray = (ctx, pixeledArray) => {\r\n        ctx.clearRect(0, 0, this.width, this.height);\r\n        pixeledArray.forEach((column) => {\r\n            column.forEach((pixel) => {\r\n                pixel.draw(ctx);\r\n            })\r\n        });\r\n    };\r\n};","import {RENDER_TYPE} from '../../../Pixelizer/data/constants';\r\nimport {PixeledImage} from './pixelizedViewService';\r\n\r\nlet ctx = null;\r\nlet canvasElement = null;\r\nlet currentPixeledImage = null;\r\n\r\nexport const init = canvasEl => {\r\n    canvasElement = canvasEl;\r\n    ctx = canvasEl.getContext('2d');\r\n};\r\n\r\nexport const renderImage = (imageMeasures, bitmapImg, renderConfig) => {\r\n    const {renderType, renderParams} = renderConfig;\r\n    const {height, width} = imageMeasures;\r\n    switch (renderType) {\r\n        case RENDER_TYPE.PIXELED:\r\n            if (currentPixeledImage) {\r\n                currentPixeledImage.renderPixeledImage(ctx, renderParams);\r\n            }\r\n            break;\r\n        case RENDER_TYPE.DEFAULT:\r\n        default:\r\n            canvasElement.height = height;\r\n            canvasElement.width = width;\r\n            ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n            ctx.drawImage(bitmapImg, 0, 0, width, height);\r\n            currentPixeledImage = new PixeledImage(bitmapImg, height, width, ctx);\r\n    }\r\n};\r\n\r\nexport const getDisplayedImageSize = (bitmapImg, canvasHeight, canvasWidth) => {\r\n    const {width, height} = bitmapImg;\r\n    const isPortaitOrientation = height >= width;\r\n\r\n    const scaledImageHeight = parseInt((canvasWidth / width) * height);\r\n    const scaledimageWidth = parseInt((canvasHeight / height) * width);\r\n\r\n    const calculatedPortraitSize = {\r\n        height: canvasHeight,\r\n        width: scaledimageWidth\r\n    }\r\n\r\n    const calculatedLandscapeSize = {\r\n        height: scaledImageHeight,\r\n        width: canvasWidth\r\n    }\r\n\r\n    if (isPortaitOrientation && scaledimageWidth > canvasWidth) {\r\n        return calculatedLandscapeSize;\r\n    }\r\n\r\n    if (!isPortaitOrientation && scaledImageHeight > canvasHeight) {\r\n        return calculatedPortraitSize;\r\n    }\r\n    return (isPortaitOrientation && calculatedPortraitSize) || calculatedLandscapeSize;\r\n}","const SLIDER_ARROW_SIZE = 20;\r\nconst SLIDER_BORDER_SIZE = 1;\r\nconst SLIDER_HYPOTENUSE = Math.sqrt(Math.pow(SLIDER_ARROW_SIZE, 2) * 2);\r\n\r\nexport const theme = {\r\n    imageMeasures: {\r\n        height: 0,\r\n        width: 0\r\n    },\r\n    slider: {\r\n        arrowSize: SLIDER_ARROW_SIZE,\r\n        borderSize: SLIDER_BORDER_SIZE,\r\n        sliderHypotenuse: SLIDER_HYPOTENUSE,\r\n        separatorLeft: SLIDER_ARROW_SIZE/2 - SLIDER_BORDER_SIZE/2\r\n    },\r\n    transition: null,\r\n    backgroundGradientLight: '#603675',\r\n    backgroundGradientDark: '#0C070F',\r\n    logoColor: '#A14ACB',\r\n    buttonColor: '#5f1782',\r\n    borderColor: '#280a37'\r\n};","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport uploadIcon from \"../../../assets/images/upload-icon.svg\";\r\n\r\nconst ImageTitleBar = (props) => {\r\nconst {name, handleUploadRequest} = props;\r\n    return (\r\n        <Wrapper>\r\n            <ActionWrapper>\r\n                <span>{name}</span>\r\n            </ActionWrapper>\r\n            <ActionWrapper onClick={handleUploadRequest}>\r\n                <img src={uploadIcon} alt={'Upload'}/>\r\n                <span>Upload</span>\r\n            </ActionWrapper>\r\n        </Wrapper>\r\n    )\r\n};\r\nexport default ImageTitleBar;\r\n\r\nconst Wrapper = styled.div `\r\n    width: 100%;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst ActionWrapper = styled.div `\r\n    display: flex;\r\n    align-items: center; \r\n    height: 25px;\r\n    font-size: 15px;\r\n    img {\r\n        height: 20px;\r\n    }\r\n    &:first-child {\r\n        padding-right: 25px;\r\n        border-right: 1px solid ${({theme}) => theme.logoColor};\r\n        span {\r\n            opacity: 0.32;\r\n        }\r\n    }\r\n    &:not(:first-child) {\r\n        padding-left: 25px;\r\n        span {\r\n            margin-left: 10px;\r\n        }\r\n    }\r\n    ${({onClick}) => onClick ? `cursor: pointer;` : ``}\r\n`;","import React, {useRef, useState, useEffect} from 'react';\r\nimport styled from \"styled-components\";\r\nimport Pixelizer from \"../../Pixelizer/components/PixelizerContainer\";\r\nimport OriginalImage from \"./OriginalImage\";\r\nimport Slider from \"./Slider\";\r\nimport * as canvasService from './viewerRenderServices/canvasService';\r\nimport {theme} from \"../../common/theme\";\r\nimport ImageTitleBar from \"./ImageTitleBar\";\r\n\r\nconst PhotoViewer = (props) => {\r\n\t\t\t\tconst {file, name, showSlider, renderConfig, handleUploadRequest} = props;\r\n\t\t\t\tconst canvasRef = useRef(null);\r\n\t\t\t\tconst sliderRef = useRef(null);\r\n\t\t\t\tconst [canvasElement,\r\n\t\t\t\t\t\t\t\tsetCanvasElement] = useState(null);\r\n\t\t\t\tconst [imageSource,\r\n\t\t\t\t\t\t\t\tsetImageSource] = useState(null);\r\n\t\t\t\tconst [showLoader,\r\n\t\t\t\t\t\t\t\tsetShowLoader] = useState(false);\r\n\t\t\t\tconst [sliderPosition,\r\n\t\t\t\t\t\t\t\tsetSliderPosition] = useState(0);\t\t\r\n    \t\t\tconst [isMouseDown,\r\n\t\t\t\t\t\t\t\tsetIsMouseDown] = useState(false);\r\n\t\t\t\tconst [transitionTimer, setTransitionTimer] = useState(null);\r\n\t\t\t\tconst transitionTime = 100;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\tuseEffect(() => {\r\n\t\t\t\t\t\t\t\tconst {current} = canvasRef;\r\n\t\t\t\t\t\t\t\tsetCanvasElement(current);\r\n\t\t\t\t\t\t\t\tcanvasService.init(current);\r\n\t\t\t\t}, [canvasRef]);\r\n\r\n\t\t\t\tuseEffect(() => {\r\n\t\t\t\t\ttheme.imageMeasures.width = theme.imageMeasures.height = null;\r\n\t\t\t\t\trenderImage();\r\n\t\t\t\t}, [file]);\r\n\r\n\t\t\t\tuseEffect(() => {\r\n\t\t\t\t\trenderImage();\r\n\t\t\t\t}, [renderConfig, canvasElement]);\r\n\r\n\t\t\t\tuseEffect(() => {\r\n\t\t\t\t\t\t\t\ttheme.sliderPosition = sliderPosition;\r\n\t\t\t\t}, [sliderPosition]);\r\n\r\n\t\t\t\tuseEffect(() => {\r\n\t\t\t\t\treturn () => {\r\n\t\t\t\t\t\t// Clean up timeout\r\n\t\t\t\t\t\twindow.clearTimeout(transitionTimer);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, [transitionTimer]);\r\n\r\n\t\t\t\tconst renderImage = () => {\r\n\t\t\t\t\tif (file && canvasElement) {\r\n\t\t\t\t\t\tsetShowLoader(true);\r\n\t\t\t\t\t\tcreateImageBitmap(file).then(bitmapImg => {\r\n\t\t\t\t\t\t\t\t\t\tconst {offsetHeight, offsetWidth} = canvasElement.parentElement;\r\n\t\t\t\t\t\t\t\t\t\tconst imageMeasures = canvasService.getDisplayedImageSize(bitmapImg, offsetHeight, offsetWidth);\r\n\t\t\t\t\t\t\t\t\t\ttheme.imageMeasures = imageMeasures;\r\n\t\t\t\t\t\t\t\t\t\tcanvasService.renderImage(imageMeasures, bitmapImg, renderConfig);\r\n\t\t\t\t\t\t\t\t\t\tgetImageProps();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tconst getImageProps = () => {\r\n\t\t\t\t\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\t\t\t\t\treader.readAsDataURL(file);\r\n\t\t\t\t\t\t\t\treader.onload = e => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (e.target.result !== imageSource) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetImageSource(e.target.result);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSliderPosition(0);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetShowLoader(false);\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst updateSilderPosition = (e, transition) => {\r\n\t\t\t\t\tconst currentX = e.pageX - canvasElement.getBoundingClientRect().left;\r\n\t\t\t\t\tconst moveTo = inBetween(currentX, 0, theme.imageMeasures.width);\r\n\t\t\t\t\tsetSliderPosition(moveTo);\r\n\t\t\t\t\ttransition && setSliderTransition(transition);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst inBetween = (actual, min, max) => {\r\n\t\t\t\t\tif (actual < min) {\r\n\t\t\t\t\t\treturn min;\r\n\t\t\t\t\t  }\r\n\t\t\t\t\tif (actual > max) {\r\n\t\t\t\t\treturn max;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn actual;\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tconst setSliderTransition = (transition) => {\r\n\t\t\t\t\ttheme.transition = `width ${transitionTime}ms`;\r\n\t\t\t\t\tsetTransitionTimer(window.setTimeout(() => {\r\n\t\t\t\t\t\ttheme.transition = null;\r\n\t\t\t\t\t\tsetTransitionTimer(null); //TODO: take care of clearing transitionTimer on unmount\r\n\t\t\t\t\t  }, transitionTime));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst startDrag = (e) => {\r\n\t\t\t\t\tif (!isMouseDown) {\r\n\t\t\t\t\t\t setIsMouseDown(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst stopDrag = (e) => {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tif (isMouseDown) {\r\n\t\t\t\t\t\tsetIsMouseDown(false)\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst onDrag = (e, transition) => {\r\n\t\t\t\t\tif (isMouseDown) {\r\n\t\t\t\t\t\tupdateSilderPosition(e, transition);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst shouldResumeDrag = (e) => {\r\n\t\t\t\t\tif (e.buttons !== 1) {\r\n\t\t\t\t\t\tstopDrag(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Wrapper>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ImageTitleBar name={name} handleUploadRequest={handleUploadRequest}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{showLoader && <Loader>loading...</Loader>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ViewerFlexWrapper\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowContent={!showLoader}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseUp={stopDrag}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={shouldResumeDrag}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseMove={(e) => onDrag(e, true)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ViewerSizeWrapper>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{showSlider && <Slider onMouseDown={startDrag} forwardRef={sliderRef}/>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<OriginalImage src={imageSource}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<canvas ref={canvasRef} id={'pixelized-output'} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ViewerSizeWrapper>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ViewerFlexWrapper>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Pixelizer isHidden={!file}/>\r\n\t\t\t\t\t\t\t\t</Wrapper>\r\n\t\t\t\t)\r\n}\r\n\r\nexport default PhotoViewer;\r\n\r\nconst Wrapper = styled.div `\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\nflex: 1;\r\nwidth: 70%;\r\n`;\r\n\r\nconst ViewerFlexWrapper = styled.div `\r\n\tflex: 1;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tvisibility: ${props => props.showContent\r\n\t\t\t\t? 'visible'\r\n\t\t\t\t: 'hidden'};\r\n\tcanvas {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t}\r\n`;\r\n\r\nconst ViewerSizeWrapper = styled.div `\r\n    width: ${({theme}) => theme.imageMeasures.width ? `${theme.imageMeasures.width}px` : `100%`};\r\n    height: ${({theme}) => theme.imageMeasures.height ? `${theme.imageMeasures.height}px` : `100%`};\r\n\tposition: relative;\r\n`;\r\n\r\nconst Loader = styled.div `\r\n\tcolor:white;\r\n\tfont-size:24px;\r\n`;","const get = state => state.renderConfig;\r\n\r\nexport const getRenderConfig = state => get(state);","import * as selectors from \"./selectors\";\r\nimport {RENDER_TYPE} from \"./constants\";\r\n\r\nexport const getShowSlider = state => {\r\n    const {renderType} = selectors.getRenderConfig(state);\r\n    return renderType !== RENDER_TYPE.DEFAULT;\r\n};","import {connect} from 'react-redux';\r\nimport PhotoViewer from './PhotoViewer';\r\nimport {getPhotoName, getPhotoFile} from '../data/selectors';\r\nimport {getRenderConfig} from '../../Pixelizer/data/selectors';\r\nimport {getShowSlider} from '../../Pixelizer/data/computedSelectors';\r\nimport {handleUploadRequest} from '../data/actions'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    name: getPhotoName(state),\r\n    file: getPhotoFile(state),\r\n    renderConfig: getRenderConfig(state),\r\n    showSlider: getShowSlider(state)\r\n});\r\n\r\nconst mapDispatchToProps = ({\r\n    handleUploadRequest\r\n});\r\n\r\nconst PhotoViewerContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PhotoViewer);\r\n\r\nexport default PhotoViewerContainer;\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const Toaster = (props) => {\r\n    const {message, dismissToaster} = props;\r\n\r\n    useEffect(() => {\r\n        window.alert(message);\r\n        dismissToaster();\r\n    }, [message]);\r\n\r\n    return (\r\n        <Backdrop/>\r\n    )\r\n}\r\n\r\nconst Backdrop = styled.div `\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: rgba(0,0,0,0.5);\r\n`;\r\n","import React from 'react';\r\nimport styled, {ThemeProvider} from \"styled-components\";\r\nimport Header from \"../../Header/Header\";\r\nimport PhotoUploader from \"../../UploaderView/components/PhotoUploaderContainer\";\r\nimport PhotoViewer from \"../../ImageView/components/PhotoViewerContainer\";\r\nimport {Toaster} from \"./Toaster\";\r\nimport {theme} from \"../../common/theme\";\r\n\r\nconst App = (props) => {\r\n  const {\r\n    showToaster,\r\n    toasterMessage,\r\n    dismissToaster,\r\n    displayViewer,\r\n    displayUploader\r\n  } = props;\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppWrapper>\r\n      <Header/>\r\n      {displayViewer && <PhotoViewer/>}\r\n      {displayUploader &&  <PhotoUploader/>}\r\n      {showToaster && <Toaster message={toasterMessage} dismissToaster={dismissToaster}/>}\r\n    </AppWrapper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppWrapper = styled.div `\r\n    background: ${({theme}) => `transparent linear-gradient(201deg, ${theme.backgroundGradientLight} 0%, ${theme.backgroundGradientDark} 100%) 0% 0% no-repeat padding-box`};\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;","const get = state => state.app;\r\n\r\nexport const getShowToaster = state => get(state).showToaster;\r\nexport const getToasterMessage = state => get(state).toasterMessage;\r\nexport const getShouldDisplayUploader = state => get(state).displayUploader;","import {getPhotoFile} from \"../../ImageView/data/selectors\";\r\nimport {getShouldHideUploaderButton} from \"../../ImageView/data/selectors\";\r\n\r\nexport const getShouldDisplayViewer = state =>  getPhotoFile(state) !== null || getShouldHideUploaderButton(state); // if there's no file selected or uploader button is disabled\r\n","import {connect} from 'react-redux';\r\nimport App from \"./App\";\r\nimport {getShowToaster, getToasterMessage, getShouldDisplayUploader} from \"../data/selectors\";\r\nimport {getShouldDisplayViewer} from \"../data/computedSelectors\";\r\nimport {dismissToaster} from \"../data/actions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    showToaster: getShowToaster(state), \r\n    toasterMessage: getToasterMessage(state),\r\n    displayViewer: getShouldDisplayViewer(state),\r\n    displayUploader: getShouldDisplayUploader(state)\r\n});\r\n\r\nconst mapDispatchToProps = ({\r\n    dismissToaster\r\n});\r\n\r\nconst AppContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(App);\r\n\r\nexport default AppContainer;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actions from './actions';\r\n\r\nconst defaultState = {\r\n    file: null,\r\n    name: '',\r\n    hideUploaderButton: false\r\n}\r\n\r\nexport const file = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case actions.HANDLE_PHOTO_UPLOADED:\r\n            return {\r\n                ...state,\r\n                file: action.payload,\r\n                name: action.payload.name || defaultState.name\r\n            }\r\n        case actions.HANDLE_UPLOAD_REQUEST:\r\n            return {\r\n                ...state,\r\n                hideUploaderButton: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default file;","import * as actions from \"./actions\";\r\nimport * as ImageViewActions from \"../../ImageView/data/actions\";\r\n\r\nconst defaultState = {\r\n    showToaster: false,\r\n    toasterMessage: '',\r\n    displayUploader: true\r\n};\r\n\r\nexport const appReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case actions.SHOW_TOASTER:\r\n            const toasterMessage = action.payload;\r\n            return {\r\n                ...state,\r\n                showToaster: true,\r\n                toasterMessage\r\n            };\r\n        case actions.DISMISS_TOASTER:\r\n            return {\r\n                ...state,\r\n                showToaster: false,\r\n                toasterMessage: ''\r\n            }\r\n        case ImageViewActions.HANDLE_PHOTO_UPLOADED:\r\n            return {\r\n                ...state,\r\n                displayUploader: false\r\n            }\r\n            case ImageViewActions.HANDLE_UPLOAD_REQUEST:\r\n            return {\r\n                ...state,\r\n                displayUploader: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as actions from './actions';\r\nimport * as photoViewerActions from '../../ImageView/data/actions';\r\nimport {RENDER_TYPE} from './constants';\r\n\r\nconst defaultState = {\r\n    renderType: RENDER_TYPE.DEFAULT,\r\n    renderParams: {}\r\n}\r\n\r\nexport const renderConfig = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case photoViewerActions.HANDLE_PHOTO_UPLOADED:\r\n            return defaultState;\r\n        case actions.UPDATE_RENDER_TYPE:\r\n            return {\r\n                ...state,\r\n                renderType: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default renderConfig;","import { combineReducers } from \"redux\";\r\nimport photoDetailsReducer from '../modules/ImageView/data/reducer';\r\nimport {appReducer} from \"../modules/App/data/reducer\";\r\nimport {renderConfig} from \"../modules/Pixelizer/data/reducer\";\r\n\r\n/**\r\n * defining the state root reducer\r\n * here we will map all the reducers from the modules\r\n */\r\nexport default combineReducers({\r\n    app: appReducer,\r\n    uploadedPhoto: photoDetailsReducer,\r\n    renderConfig: renderConfig\r\n});\r\n\r\n","import {all, select, put, takeLatest} from 'redux-saga/effects'\r\nimport * as pixelizerActions from './actions';\r\nimport {getRenderConfig} from './selectors';\r\nimport {RENDER_TYPE} from './constants';\r\n\r\nfunction * handlePixerlizerActivated(action) {\r\n    const {renderType: type} = yield select(getRenderConfig);\r\n    // yield console.log(type === RENDER_TYPE.DEFAULT); if not pixeled already\r\n    if (type === RENDER_TYPE.DEFAULT) {\r\n        // set initial pixelizer configs\r\n        yield put(pixelizerActions.updateRenderType(RENDER_TYPE.PIXELED));\r\n    } else {\r\n        // set current pixelizer configs\r\n        yield put(pixelizerActions.updateRenderType(type));\r\n    }\r\n};\r\n\r\nexport default function * saga() {\r\n    yield all([takeLatest(pixelizerActions.PIXELIZER_ACTIVATED, handlePixerlizerActivated)]);\r\n}","import {all} from 'redux-saga/effects';\r\nimport pixelizerSaga from '../modules/Pixelizer/data/saga';\r\n\r\n/**\r\n * main saga file\r\n */\r\nexport default function* saga() {\r\n    yield all([\r\n        pixelizerSaga()\r\n    ]);\r\n}\r\n\r\n","import {createStore, applyMiddleware,compose} from \"redux\";\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './reducer';\r\nimport rootSaga from './saga';\r\n\r\n// sagaMiddleware controls all the side-effects like fetching data from the server.\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [\r\n    // Add other middleware on this line...\r\n    sagaMiddleware,\r\n];\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n    )\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './modules/App/components/AppContainer';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./store/store\";\r\nimport Provider from \"react-redux/es/components/Provider\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}