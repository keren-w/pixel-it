{"version":3,"sources":["assets/images/Pixelit_svg.svg","assets/images/upload-icon.svg","assets/images/upload.svg","modules/Header/Header.js","modules/common/styles.js","modules/PhotoUploader/components/UploaderView.js","modules/PhotoUploader/components/UploaderInput.js","modules/PhotoUploader/data/validator.js","modules/ImageView/data/actions.js","modules/App/data/actions.js","modules/ImageView/data/selectors.js","modules/PhotoUploader/components/PhotoUploaderContainer.js","modules/Pixelizer/components/Pixelizer.js","modules/Pixelizer/data/actions.js","modules/Pixelizer/components/PixelizerContainer.js","modules/Pixelizer/data/constants.js","modules/ImageView/components/viewerRenderServices/pixelizedViewService.js","modules/ImageView/components/viewerRenderServices/canvasService.js","modules/common/theme.js","modules/ImageView/components/ImageTitleBar.js","modules/ImageView/components/OriginalImage.js","modules/ImageView/components/Slider.js","modules/ImageView/components/ViewerContent.js","modules/ImageView/components/ImageViewWrapper.js","modules/Pixelizer/data/selectors.js","modules/Pixelizer/data/computedSelectors.js","modules/ImageView/components/ImageViewContainer.js","modules/App/components/Toaster.js","modules/App/components/App.js","modules/App/data/selectors.js","modules/App/components/AppContainer.js","serviceWorker.js","modules/ImageView/data/reducer.js","modules/App/data/reducer.js","modules/Pixelizer/data/reducer.js","store/reducer.js","modules/Pixelizer/data/saga.js","store/saga.js","store/store.js","index.js"],"names":["module","exports","Header","props","HeaderWrapper","src","logo","alt","styled","div","theme","logoColor","ButtonWrapper","buttonColor","PhotoUploader","name","hideUploaderButton","children","UploderWrapper","UploaderFrame","uploadSymbol","htmlFor","FileName","borderColor","span","UploaderInput","handlePhotoUpload","setShowToaster","inputRef","useRef","checkInput","e","target","files","accept","file","length","validationResult","type","size","isValid","message","getPhotoInputValidationResult","value","getUploaderInput","className","ref","id","onInput","UploaderView","ButtonlessWrapper","uploadIcon","HANDLE_PHOTO_UPLOADED","SHOW_TOASTER","DISMISS_TOASTER","get","state","uploadedPhoto","getPhotoName","getPhotoFile","mapDispatchToProps","photoDetails","payload","toasterMessage","PhotoUploaderContainer","connect","Pixelizer","isHidden","pixelizerClicked","Wrapper","PixelitButtonWrapper","disabled","onClick","UPDATE_RENDER_TYPE","updateRenderType","newType","PixelizerContainer","RENDER_TYPE","Pixel","x","y","color","this","height","width","ctx","beginPath","fillStyle","fillRect","stroke","PixeledImage","bitmapImg","getImagePixelizedArray","pixelizedImg","pixelSize","newColumn","pixel","calculatePixel","push","i","j","pixelColor","red","green","blue","alpha","imageData","data","Math","pow","drawPixeledImagefromArray","pixeledArray","clearRect","forEach","column","draw","createImageBitmap","resizeHeight","resizeWidth","resizeQuality","then","resizedImage","getImageData","canvasWidth","canvasHeight","pixelsArray","canvasElement","currentPixeledImage","imageMeasures","slider","arrowSize","borderSize","sliderHypotenuse","sqrt","separatorLeft","SLIDER_ARROW_SIZE","transition","backgroundGradientLight","backgroundGradientDark","ImageTitleBar","ActionWrapper","OriginalImage","ImageWrapper","Image","attrs","style","sliderPosition","position","top","left","overflow","zIndex","img","Slider","onMouseDown","SliderWrapper","draggable","onDragStart","preventDefault","TopSeperator","Arrow","BottomSeperator","cursor","ViewerContent","showLoader","showSlider","imageSource","forwardRef","useState","setSliderPosition","isMouseDown","setIsMouseDown","transitionTimer","setTransitionTimer","useEffect","window","clearTimeout","inBetween","actual","min","max","setSliderTransition","setTimeout","startDrag","stopDrag","onDrag","currentX","pageX","getBoundingClientRect","moveTo","updateSliderPosition","ViewerWrapper","showContent","onMouseUp","onTouchEnd","onMouseEnter","buttons","onMouseMove","onTouchMove","ViewerSizeWrapper","onTouchStart","PhotoViewer","renderConfig","canvasRef","setCanvasElement","setImageSource","setShowLoader","canvasEl","current","getContext","renderImage","useCallback","parentElement","isPortaitOrientation","scaledImageHeight","parseInt","scaledimageWidth","calculatedPortraitSize","calculatedLandscapeSize","canvasService","offsetHeight","offsetWidth","renderType","renderParams","renderPixeledImage","drawImage","getImageProps","reader","FileReader","readAsDataURL","onload","result","Loader","getRenderConfig","getShowSlider","selectors","PhotoViewerContainer","ImageViewWrapper","Toaster","dismissToaster","alert","Backdrop","App","showToaster","displayUploader","AppWrapper","app","getShowToaster","getToasterMessage","getShouldDisplayUploader","AppContainer","Boolean","location","hostname","match","defaultState","action","actions","appActions","photoViewerActions","combineReducers","ImageViewActions","photoDetailsReducer","handlePixerlizerActivated","saga","select","put","pixelizerActions","all","takeLatest","pixelizerSaga","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","rootSaga","ReactDOM","render","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca290ca9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Pixelit_svg.f3bf0b34.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload-icon.7c4eb3b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.e86a473b.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport logo from \"../../assets/images/Pixelit_svg.svg\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <HeaderWrapper>\r\n            <img src={logo} alt={'Pixel It!'}/>\r\n        </HeaderWrapper>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n\r\nconst HeaderWrapper = styled.div`\r\n    font-size: 32px;\r\n    color: ${({theme}) => theme.logoColor};\r\n    width: 100%;\r\n    margin-top: 5px;\r\n    padding-left: 2rem;\r\n\r\n    img {\r\n        height: 25px;\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const ButtonWrapper = styled.div `\r\nmargin: 25px 0;\r\nwidth: 60%;\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\njustify-content: center;\r\nalign-items: baseline;\r\n\r\nlabel, button {\r\n    position: relative;\r\n    font-size: 1.15em;  \r\n    background-color: ${({theme}) => theme.buttonColor};\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 5px;\r\n    box-shadow: rgba(0,0,0,0.2) -1px 22px 20px 2px;\r\n    border: none;\r\n    margin: 0;\r\n    height: 5.5rem;\r\n    width: 14rem;\r\n\r\n    &:hover !&[disabled] {\r\n        background-color: rgba(7,7,7,0.2);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n    &[disabled] {\r\n        color: rgba(255,255,255,.2);\r\n        box-shadow: rgba(0,0,0,.6) 2px 2px 6px;\r\n    }\r\n}\r\n\r\ninput {\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    opacity: 0;\r\n    position: absolute;\r\n}\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {ButtonWrapper} from \"../../common/styles\";\r\nimport uploadSymbol from \"../../../assets/images/upload.svg\";\r\n\r\nconst PhotoUploader = (props) => {\r\n\t\tconst {name, hideUploaderButton, children} = props;\r\n\t\treturn ( hideUploaderButton ?\r\n\t\t\tchildren() :\r\n\t\t\t<UploderWrapper>\r\n\t\t\t\t\t<UploaderFrame>\r\n\t\t\t\t\t\t\t<img src={uploadSymbol} alt={'Upload'}/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"file\">Upload\r\n\t\t\t\t\t\t\t\t{children()}\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t{name && <FileName>{name}</FileName>}\r\n\t\t\t\t\t</UploaderFrame>\r\n\t\t\t</UploderWrapper>\r\n\t\t);\r\n}\r\n\r\nexport default PhotoUploader;\r\n\r\nconst UploderWrapper = styled(ButtonWrapper)`\r\n\tmargin: 0;\r\n\tflex: 1;\r\n\talign-items: center;\r\n\t#photo-input {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\topacity: 0;\r\n\t\tposition: absolute;\r\n\t}\r\n`;\r\n\r\nconst UploaderFrame = styled.div`\r\n\tborder: 2px solid ${({theme}) => theme.borderColor};\r\n\tborder-radius: 8px;\r\n    height: 70%;\r\n    width: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tmargin-bottom: 6rem;\r\n\r\n\timg {\r\n\t\twidth: 88px;\r\n\t\theight: calc(50% - 2rem);\r\n    \tmargin-top: 2rem;\r\n}\r\n`;\r\n\r\nconst FileName = styled.span `\r\n\tmargin-top: 1rem;\r\n\tcolor: white;\r\n\tfont-size: 0.85rem;\r\n\tmargin-left: 1.5rem;\r\n`;","import React, {useRef} from 'react';\r\nimport styled from \"styled-components\";\r\nimport uploadIcon from \"../../../assets/images/upload-icon.svg\";\r\nimport {getPhotoInputValidationResult} from \"../data/validator\";\r\nimport UploaderView from \"./UploaderView\";\r\n\r\nconst UploaderInput = (props) => {\r\n\tconst {name, handlePhotoUpload, setShowToaster, hideUploaderButton} = props\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst checkInput = (e) => {\r\n\t\tconst {files, accept} = e.target;\r\n\t\tconst file = files.length > 0 && files[0];\r\n\r\n\t\tconst validationResult = getPhotoInputValidationResult(file, accept);\r\n\t\tconst {isValid, message} = validationResult;\r\n\r\n\t\tif (!isValid) {\r\n\t\t\t\t\t\tsetShowToaster(message);\r\n\t\t\t\t\t\te.target.value = null; // nullify input so to revalidate onChange\r\n\t\t} else if (file) {\r\n\t\t\t\t\t\thandlePhotoUpload(file);\r\n\t\t}\r\n\t}\r\n\r\n\tconst getUploaderInput = () => (<input\r\n\t\tclassName=\"user-file\"\r\n\t\tref={inputRef}\r\n\t\tid=\"photo-input\"\r\n\t\ttype=\"file\"\r\n\t\taccept=\"image/jpeg\"\r\n\t\tonInput={checkInput}/>);\r\n\t\t\t\r\n\r\n\t\treturn (\r\n\t\t\t<UploaderView name={name} hideUploaderButton={hideUploaderButton}>\r\n\t\t\t\t{() => {\r\n\t\t\t\t\t\tif (hideUploaderButton) {\r\n\t\t\t\t\t\t\treturn \t(\r\n\t\t\t\t\t\t\t\t<ButtonlessWrapper> \r\n\t\t\t\t\t\t\t\t\t<img src={uploadIcon} alt={'Upload'}/>\r\n\t\t\t\t\t\t\t\t\t<span>Upload</span>\r\n\t\t\t\t\t\t\t\t\t{getUploaderInput()}\r\n\t\t\t\t\t\t\t\t</ButtonlessWrapper>\r\n\t\t\t\t\t\t\t)};\r\n\t\t\t\t\t\treturn getUploaderInput();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t</UploaderView>\r\n\t\t)\r\n}\r\n\r\nexport default UploaderInput;\r\n\r\nconst ButtonlessWrapper = styled.div`\r\n\tdisplay: flex;\r\n    align-items: center; \r\n\tposition: relative;\r\n\timg {\r\n        height: 20px;\r\n\t}\r\n\tspan {\r\n\t\tmargin-left: 10px;\r\n\t}\r\n\tinput {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\topacity: 0;\r\n\t\tposition: absolute;\r\n\t}\r\n`;","const TOP_LIMIT_SIZE = 2097152;\r\n\r\nexport const getPhotoInputValidationResult = (file, accept) => {\r\n    const {type, size} = file;\r\n\r\n    if (type && type !== accept) {\r\n        //throw error wrong file type\r\n        return {isValid: false, message: `Please select only files of type ${accept}`}\r\n    }\r\n\r\n    if (size && size > TOP_LIMIT_SIZE) {\r\n        // throw error large file\r\n        return {isValid: false, message: 'please upload a file below 2 MB'};\r\n    }\r\n\r\n    return {isValid: true, message: ''}\r\n}","export const HANDLE_PHOTO_UPLOADED = 'MODULES/IMAGE_VIEW/PHOTO_UPLOADED';\r\n\r\n/**\r\n * Calls action when a valid photo was uploaded\r\n */\r\nexport const handlePhotoUpload = photoDetails => ({\r\n    type: HANDLE_PHOTO_UPLOADED,\r\n    payload: photoDetails,\r\n});","export const SHOW_TOASTER = 'MODULES/PHOTO_VIEWER/SHOW_TOASTER';\r\nexport const DISMISS_TOASTER = 'MODULES/PHOTO_VIEWER/TOASTER_DISMISSED';\r\n\r\n/**\r\n * Calls action when a valid photo was uploaded\r\n */\r\nexport const setShowToaster = (toasterMessage) => ({\r\n    type: SHOW_TOASTER,\r\n    payload: toasterMessage\r\n});\r\n\r\nexport const dismissToaster = () => ({\r\n    type: DISMISS_TOASTER\r\n});","const get = state => state.uploadedPhoto;\r\n\r\nexport const getPhotoName = state => get(state).name;\r\nexport const getPhotoFile = state => get(state).file;\r\n","import {connect} from 'react-redux';\r\nimport UploaderInput from \"./UploaderInput\";\r\nimport {handlePhotoUpload} from \"../../ImageView/data/actions\";\r\nimport {setShowToaster} from \"../../App/data/actions\";\r\nimport {getPhotoName} from \"../../ImageView/data/selectors\";\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    name: getPhotoName(state),\r\n    hideUploaderButton: props.hideUploaderButton || false,\r\n});\r\n\r\nconst mapDispatchToProps = ({\r\n    handlePhotoUpload,\r\n    setShowToaster\r\n});\r\n\r\nconst PhotoUploaderContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UploaderInput);\r\n\r\nexport default PhotoUploaderContainer;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {ButtonWrapper} from \"../../common/styles\";\r\n\r\nconst Pixelizer = (props) => {\r\n\t\tconst {isHidden, pixelizerClicked} = props;\r\n\t\treturn (\r\n\t\t\t\t<Wrapper isHidden={isHidden}>\r\n\t\t\t\t\t\t<PixelitButtonWrapper>\r\n\t\t\t\t\t\t\t\t<button disabled={false} className=\"pixelizer\" onClick={pixelizerClicked}>Pixel it!</button>\r\n\t\t\t\t\t\t</PixelitButtonWrapper>\r\n\t\t\t\t</Wrapper>\r\n\t\t)\r\n}\r\n\r\nexport default Pixelizer;\r\n\r\nconst Wrapper = styled.div `\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tvisibility: ${props => props.isHidden\r\n\t\t? `hidden`\r\n\t\t: `visible`}\r\n`;\r\n\r\nconst PixelitButtonWrapper = styled(ButtonWrapper)`\r\nbutton {\r\n\theight: 4rem;\r\n}`;","export const PIXELIZER_ACTIVATED = 'MODULES/PIXELIZER/PIXELIZER_ACTIVATED';\r\nexport const UPDATE_RENDER_TYPE = 'MODULES/PIXELIZER/UPDATE_RENDER_TYPE';\r\nexport const UPDATE_RENDER_PARAMS = 'MODULES/PIXELIZER/UPDATE_RENDER_PARAMS';\r\n/**\r\n * Calls action when a valid photo was uploaded\r\n */\r\nexport const handlePixelizerActivated = photoDetails => ({\r\n    type: PIXELIZER_ACTIVATED\r\n});\r\n\r\nexport const updateRenderType = newType => ({\r\n    type: UPDATE_RENDER_TYPE,\r\n    payload: newType\r\n});","import {connect} from 'react-redux';\r\nimport Pixelizer from './Pixelizer';\r\nimport {handlePixelizerActivated} from '../data/actions';\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = ({\r\n    pixelizerClicked: handlePixelizerActivated\r\n});\r\n\r\nconst PixelizerContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Pixelizer);\r\n\r\nexport default PixelizerContainer;","export const RENDER_TYPE = {\r\n    DEFAULT: 'PHOTO_VIEW',\r\n    PIXELED: 'PIXELED'\r\n};","const DEFAULT_PIXEL_SIZE = 25;\r\nclass Pixel {\r\n    constructor(size, x, y, color) {\r\n        this.height = size;\r\n        this.width = size;\r\n        this.color = color;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.beginPath()\r\n        ctx.fillStyle = this.color;\r\n        ctx.fillRect(this.x, this.y, this.width, this.height);\r\n        ctx.stroke();\r\n    }\r\n};\r\n\r\nexport class PixeledImage {\r\n\r\n    constructor(bitmapImg = null, height = 0, width = 0, ctx = null) {\r\n        this.bitmapImg = bitmapImg;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.pixelSize = DEFAULT_PIXEL_SIZE;\r\n        if (bitmapImg && height && width && ctx) {\r\n             createImageBitmap(bitmapImg, {\r\n                resizeHeight: height,\r\n                resizeWidth: width,\r\n                resizeQuality: 'high'\r\n            }).then(resizedImage => {\r\n                this.imageData = ctx.getImageData(0, 0, resizedImage.width, resizedImage.height);\r\n            });\r\n        }\r\n    }\r\n\r\n    renderPixeledImage(ctx, {pixelSize}, canvasWidth, canvasHeight) {\r\n        if (pixelSize && pixelSize !== this.pixelSize) {\r\n            this.pixelSize = pixelSize;\r\n        };\r\n        if (this.imageData) {\r\n            const pixelsArray = this.getImagePixelizedArray();\r\n            this.drawPixeledImagefromArray(ctx, pixelsArray, canvasWidth, canvasHeight);\r\n        }\r\n    }\r\n\r\n    getImagePixelizedArray = () => {\r\n        let x,\r\n            y,\r\n            pixelizedImg = [];\r\n        // Looping imageData in pixelSize chunks\r\n        for (x = 0; x < this.width; x += this.pixelSize) {\r\n            let newColumn = []\r\n            for (y = 0; y < this.height; y += this.pixelSize) {\r\n                let pixel = this.calculatePixel(x, y);\r\n                newColumn.push(pixel);\r\n            }\r\n            pixelizedImg.push(newColumn);\r\n        }\r\n        return pixelizedImg;\r\n\r\n    };\r\n\r\n    calculatePixel = (x, y) => {\r\n        let i,\r\n            j,\r\n            pixelColor = {\r\n                red: 0,\r\n                green: 0,\r\n                blue: 0,\r\n                alpha: 0\r\n            }\r\n        for (i = 0; i < this.pixelSize; ++i) {\r\n            for (j = 0; j < this.pixelSize; ++j) {\r\n                pixelColor.red += this.imageData.data[((this.width * y) + x) * 4]\r\n                pixelColor.green += this.imageData.data[((this.width * y) + x) * 4 + 1]\r\n                pixelColor.blue += this.imageData.data[((this.width * y) + x) * 4 + 2]\r\n                pixelColor.alpha += this.imageData.data[((this.width * y) + x) * 4 + 3]\r\n            }\r\n        }\r\n        pixelColor.red = pixelColor.red / Math.pow(this.pixelSize, 2)\r\n        pixelColor.green = pixelColor.green / Math.pow(this.pixelSize, 2)\r\n        pixelColor.blue = pixelColor.blue / Math.pow(this.pixelSize, 2)\r\n        pixelColor.alpha = pixelColor.alpha / Math.pow(this.pixelSize, 2)\r\n        pixelColor = `rgba(${pixelColor.red},${pixelColor.green},${pixelColor.blue},${pixelColor.alpha})`\r\n        return new Pixel(this.pixelSize, x, y, pixelColor)\r\n    };\r\n\r\n    drawPixeledImagefromArray = (ctx, pixeledArray) => {\r\n        ctx.clearRect(0, 0, this.width, this.height);\r\n        pixeledArray.forEach((column) => {\r\n            column.forEach((pixel) => {\r\n                pixel.draw(ctx);\r\n            })\r\n        });\r\n    };\r\n};","import {RENDER_TYPE} from '../../../Pixelizer/data/constants';\r\nimport {PixeledImage} from './pixelizedViewService';\r\n\r\nlet ctx = null;\r\nlet canvasElement = null;\r\nlet currentPixeledImage = null;\r\n\r\nexport const init = canvasEl => {\r\n    canvasElement = canvasEl;\r\n    ctx = canvasEl.getContext('2d');\r\n};\r\n\r\nexport const renderImage = (imageMeasures, bitmapImg, renderConfig) => {\r\n    const {renderType, renderParams} = renderConfig;\r\n    const {height, width} = imageMeasures;\r\n    switch (renderType) {\r\n        case RENDER_TYPE.PIXELED:\r\n            if (currentPixeledImage) {\r\n                currentPixeledImage.renderPixeledImage(ctx, renderParams);\r\n            }\r\n            break;\r\n        case RENDER_TYPE.DEFAULT:\r\n        default:\r\n            canvasElement.height = height;\r\n            canvasElement.width = width;\r\n            ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n            ctx.drawImage(bitmapImg, 0, 0, width, height);\r\n            currentPixeledImage = new PixeledImage(bitmapImg, height, width, ctx);\r\n    }\r\n};\r\n\r\nexport const getDisplayedImageSize = (bitmapImg, canvasHeight, canvasWidth) => {\r\n    const {width, height} = bitmapImg;\r\n    const isPortaitOrientation = height >= width;\r\n\r\n    const scaledImageHeight = parseInt((canvasWidth / width) * height);\r\n    const scaledimageWidth = parseInt((canvasHeight / height) * width);\r\n\r\n    const calculatedPortraitSize = {\r\n        height: canvasHeight,\r\n        width: scaledimageWidth\r\n    }\r\n\r\n    const calculatedLandscapeSize = {\r\n        height: scaledImageHeight,\r\n        width: canvasWidth\r\n    }\r\n\r\n    if (isPortaitOrientation && scaledimageWidth > canvasWidth) {\r\n        return calculatedLandscapeSize;\r\n    }\r\n\r\n    if (!isPortaitOrientation && scaledImageHeight > canvasHeight) {\r\n        return calculatedPortraitSize;\r\n    }\r\n    return (isPortaitOrientation && calculatedPortraitSize) || calculatedLandscapeSize;\r\n}","const SLIDER_ARROW_SIZE = 20;\r\nconst SLIDER_BORDER_SIZE = 1;\r\nconst SLIDER_HYPOTENUSE = Math.sqrt(Math.pow(SLIDER_ARROW_SIZE, 2) * 2);\r\n\r\nexport const theme = {\r\n    imageMeasures: {\r\n        height: 0,\r\n        width: 0\r\n    },\r\n    slider: {\r\n        arrowSize: SLIDER_ARROW_SIZE,\r\n        borderSize: SLIDER_BORDER_SIZE,\r\n        sliderHypotenuse: SLIDER_HYPOTENUSE,\r\n        separatorLeft: SLIDER_ARROW_SIZE/2 - SLIDER_BORDER_SIZE/2\r\n    },\r\n    transition: null,\r\n    backgroundGradientLight: '#603675',\r\n    backgroundGradientDark: '#0C070F',\r\n    logoColor: '#A14ACB',\r\n    buttonColor: '#5f1782',\r\n    borderColor: '#280a37'\r\n};","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport PhotoUploader from \"../../PhotoUploader/components/PhotoUploaderContainer\";\r\n\r\nconst ImageTitleBar = (props) => {\r\nconst {name} = props;\r\n    return (\r\n        <Wrapper>\r\n            <ActionWrapper>\r\n                <span>{name}</span>\r\n            </ActionWrapper>\r\n            <ActionWrapper>\r\n                <PhotoUploader hideUploaderButton={true}/>\r\n            </ActionWrapper>\r\n        </Wrapper>\r\n    )\r\n};\r\nexport default ImageTitleBar;\r\n\r\nconst Wrapper = styled.div `\r\n    width: 100%;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst ActionWrapper = styled.div `\r\n    display: flex;\r\n    align-items: center; \r\n    height: 25px;\r\n    font-size: 15px;\r\n    \r\n    &:first-child {\r\n        padding-right: 25px;\r\n        border-right: 1px solid ${({theme}) => theme.logoColor};\r\n        span {\r\n            opacity: 0.32;\r\n        }\r\n    }\r\n    &:not(:first-child) {\r\n        padding-left: 25px;\r\n    }\r\n    ${({onClick}) => onClick ? `cursor: pointer;` : ``}\r\n`;","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst OriginalImage = (props) => {\r\n    const {src} = props;\r\n\r\n    return (\r\n        <ImageWrapper id={'photo-input'}>\r\n            <Image src={src}/>\r\n        </ImageWrapper>\r\n    )\r\n}\r\n\r\nexport default OriginalImage;\r\n\r\nconst ImageWrapper = styled.div.attrs(props => ({\r\n    id: props.id,\r\n    style: {\r\n        height: `${props.theme.imageMeasures.height}px`,\r\n        width: `${props.theme.sliderPosition}px`,\r\n        transition: props.theme.transition,\r\n        position: `absolute`,\r\n        top: 0,\r\n        left: 0,\r\n        overflow: `hidden`,\r\n        zIndex: 1\r\n    },\r\n  }))``;\r\n  \r\nconst Image = styled.img `\r\n    height: 100%;\r\n`;","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Slider = (props) => {\r\n    const {onMouseDown} = props;\r\n    return (\r\n        <SliderWrapper\r\n            draggable\r\n            onDragStart={e => e.preventDefault()}\r\n            onMouseDown={onMouseDown}\r\n           >\r\n            <TopSeperator/>\r\n            <Arrow/>\r\n            <BottomSeperator/>\r\n        </SliderWrapper>\r\n    )\r\n}\r\n\r\nexport default Slider;\r\n\r\nconst SliderWrapper = styled.span.attrs(props => ({\r\n    style: {\r\n        height: `${props.theme.imageMeasures.height}px`,\r\n        width: `${props.theme.slider.arrowSize}px`,\r\n        position: `absolute`,\r\n        top: 0,\r\n        left: `${props.theme.sliderPosition-props.theme.slider.arrowSize/2}px`,\r\n        cursor:` col-resize`,\r\n        zIndex: 2\r\n    },\r\n  }))``;\r\n\r\nconst Arrow = styled.span `\r\n    height: ${({theme}) => theme.slider.arrowSize}px;\r\n    width: 100%;\r\n    border: ${({theme}) => theme.slider.borderSize}px solid white;\r\n    position: absolute;\r\n    top: ${({theme}) => theme.imageMeasures.height/2-theme.slider.arrowSize/2}px; /* offset between two elements*/\r\n    left: 0;\r\n    transform: rotate(45deg);\r\n`;\r\nconst TopSeperator = styled.div `\r\n    width: ${({theme}) => theme.slider.borderSize}px;\r\n    background-color: white;\r\n    height: ${({theme}) => theme.imageMeasures.height/2-theme.slider.sliderHypotenuse/2}px;\r\n    left: ${({theme}) => theme.slider.separatorLeft}px;\r\n    position: absolute;\r\n    top: 0;\r\n`;\r\nconst BottomSeperator = styled(TopSeperator)`\r\n    top: unset;\r\n    bottom: 0;\r\n`;","import React, {useState, useEffect} from 'react';\r\nimport styled from \"styled-components\";\r\nimport OriginalImage from \"./OriginalImage\";\r\nimport Slider from \"./Slider\";\r\nimport {theme} from \"../../common/theme\";\r\n\r\nconst ViewerContent = (props) => {\r\n    const {showLoader, showSlider, imageSource, forwardRef, canvasElement} = props;\r\n\r\n    const [sliderPosition,\r\n        setSliderPosition] = useState(0);\r\n\r\n    const [isMouseDown,\r\n        setIsMouseDown] = useState(false);\r\n\r\n    const [transitionTimer,\r\n        setTransitionTimer] = useState(null);\r\n    const transitionTime = 100;\r\n\r\n    useEffect(() => {\r\n        setSliderPosition(0);\r\n    }, [imageSource]);\r\n\r\n    useEffect(() => {\r\n        theme.sliderPosition = sliderPosition;\r\n    }, [sliderPosition]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            // Clean up timeout\r\n            window.clearTimeout(transitionTimer);\r\n        }\r\n    }, [transitionTimer]);\r\n\r\n    const updateSliderPosition = (e, transition) => {\r\n        const currentX = e.pageX - canvasElement.getBoundingClientRect().left;\r\n        const moveTo = inBetween(currentX, 0, theme.imageMeasures.width);\r\n        setSliderPosition(moveTo);\r\n        transition && setSliderTransition(transition);\r\n    }\r\n\r\n    const inBetween = (actual, min, max) => {\r\n        if (actual < min) {\r\n            return min;\r\n        }\r\n        if (actual > max) {\r\n            return max;\r\n        }\r\n        return actual;\r\n    };\r\n\r\n    const setSliderTransition = (transition) => {\r\n        theme.transition = `width ${transitionTime}ms`;\r\n        setTransitionTimer(window.setTimeout(() => {\r\n            theme.transition = null;\r\n            setTransitionTimer(null); //TODO: take care of clearing transitionTimer on unmount\r\n        }, transitionTime));\r\n    }\r\n\r\n    const startDrag = (e) => {\r\n        if (!isMouseDown) {\r\n            setIsMouseDown(true);\r\n        }\r\n    };\r\n\r\n    const stopDrag = (e) => {\r\n        e.preventDefault();\r\n        if (isMouseDown) {\r\n            setIsMouseDown(false)\r\n        };\r\n    };\r\n\r\n    const onDrag = (e, transition) => {\r\n        if (isMouseDown) {\r\n            updateSliderPosition(e, transition);\r\n        }\r\n    };\r\n\r\n    const shouldResumeDrag = (e) => {\r\n        if (e.buttons !== 1) {\r\n            stopDrag(e);\r\n        }\r\n    };\r\n    return (\r\n        <ViewerWrapper\r\n            showContent={!showLoader}\r\n            onMouseUp={stopDrag}\r\n            onTouchEnd={stopDrag}\r\n            onMouseEnter={shouldResumeDrag}\r\n            onMouseMove={(e) => onDrag(e, true)}\r\n            onTouchMove={(e) => onDrag(e, true)}>\r\n            <ViewerSizeWrapper>\r\n                {showSlider && <Slider onMouseDown={startDrag} onTouchStart={startDrag}/>}\r\n                <OriginalImage src={imageSource}/>\r\n                <canvas ref={forwardRef} id={'pixelized-output'}/>\r\n            </ViewerSizeWrapper>\r\n        </ViewerWrapper>\r\n    )\r\n}\r\n\r\nexport default ViewerContent;\r\n\r\nconst ViewerWrapper = styled.div `\r\n\tflex: 1;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tvisibility: ${props => props.showContent ? 'visible' : 'hidden'};\r\n\tcanvas {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t}\r\n`;\r\n\r\nconst ViewerSizeWrapper = styled.div `\r\n    width: ${({theme}) => theme.imageMeasures.width ? `${theme.imageMeasures.width}px` : `100%`};\r\n    height: ${({theme}) => theme.imageMeasures.height ? `${theme.imageMeasures.height}px` : `100%`};\r\n\tposition: relative;\r\n`;","import React, {useRef, useState, useEffect, useCallback} from 'react';\r\nimport styled from \"styled-components\";\r\nimport Pixelizer from \"../../Pixelizer/components/PixelizerContainer\";\r\nimport * as canvasService from './viewerRenderServices/canvasService';\r\nimport {theme} from \"../../common/theme\";\r\nimport ImageTitleBar from \"./ImageTitleBar\";\r\nimport ViewerContent from \"./ViewerContent\";\r\n\r\nconst PhotoViewer = (props) => {\r\n    const {file, name, showSlider, renderConfig} = props;\r\n    const canvasRef = useRef(null);\r\n    const [canvasElement,\r\n        setCanvasElement] = useState(null);\r\n    const [imageSource,\r\n        setImageSource] = useState(null);\r\n    const [showLoader,\r\n        setShowLoader] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const {current} = canvasRef;\r\n        setCanvasElement(current);\r\n        canvasService.init(current);\r\n    }, [canvasRef]);\r\n\r\n    useEffect(() => {\r\n        theme.imageMeasures.width = theme.imageMeasures.height = null;\r\n        renderImage();\r\n    }, [file, renderImage]);\r\n\r\n    useEffect(() => {\r\n        renderImage();\r\n    }, [renderConfig, canvasElement, renderImage]);\r\n\r\n    const renderImage = useCallback(() => {\r\n        if (file && canvasElement) {\r\n            setShowLoader(true);\r\n            createImageBitmap(file).then(bitmapImg => {\r\n                const {offsetHeight, offsetWidth} = canvasElement.parentElement;\r\n                const imageMeasures = canvasService.getDisplayedImageSize(bitmapImg, offsetHeight, offsetWidth);\r\n                theme.imageMeasures = imageMeasures;\r\n                canvasService.renderImage(imageMeasures, bitmapImg, renderConfig);\r\n                getImageProps();\r\n            });\r\n        }\r\n    }, [canvasElement, file, getImageProps, renderConfig]);\r\n\r\n    const getImageProps = useCallback(() => {\r\n        var reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = e => {\r\n            if (e.target.result !== imageSource) {\r\n                setImageSource(e.target.result);\r\n            }\r\n            setShowLoader(false);\r\n        };\r\n    }, [file, imageSource]);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <ImageTitleBar name={name}/> {showLoader && <Loader>loading...</Loader>}\r\n            <ViewerContent\r\n                showLoader={showLoader}\r\n                showSlider={showSlider}\r\n                imageSource={imageSource}\r\n                forwardRef={canvasRef}\r\n                canvasElement={canvasElement}/>\r\n            <Pixelizer isHidden={!file}/>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default PhotoViewer;\r\n\r\nconst Wrapper = styled.div `\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\nflex: 1;\r\nwidth: 70%;\r\n`;\r\n\r\nconst Loader = styled.div `\r\n\tcolor:white;\r\n\tfont-size:24px;\r\n`;","const get = state => state.renderConfig;\r\n\r\nexport const getRenderConfig = state => get(state);","import * as selectors from \"./selectors\";\r\nimport {RENDER_TYPE} from \"./constants\";\r\n\r\nexport const getShowSlider = state => {\r\n    const {renderType} = selectors.getRenderConfig(state);\r\n    return renderType !== RENDER_TYPE.DEFAULT;\r\n};","import {connect} from 'react-redux';\r\nimport ImageViewWrapper from './ImageViewWrapper';\r\nimport {getPhotoName, getPhotoFile} from '../data/selectors';\r\nimport {getRenderConfig} from '../../Pixelizer/data/selectors';\r\nimport {getShowSlider} from '../../Pixelizer/data/computedSelectors';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    name: getPhotoName(state),\r\n    file: getPhotoFile(state),\r\n    renderConfig: getRenderConfig(state),\r\n    showSlider: getShowSlider(state)\r\n});\r\n\r\nconst mapDispatchToProps = ({\r\n});\r\n\r\nconst PhotoViewerContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ImageViewWrapper);\r\n\r\nexport default PhotoViewerContainer;\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const Toaster = (props) => {\r\n    const {message, dismissToaster} = props;\r\n\r\n    useEffect(() => {\r\n        window.alert(message);\r\n        dismissToaster();\r\n    }, [message, dismissToaster]);\r\n\r\n    return (\r\n        <Backdrop/>\r\n    )\r\n}\r\n\r\nconst Backdrop = styled.div `\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: rgba(0,0,0,0.5);\r\n`;\r\n","import React from 'react';\r\nimport styled, {ThemeProvider} from \"styled-components\";\r\nimport Header from \"../../Header/Header\";\r\nimport UploaderView from \"../../PhotoUploader/components/PhotoUploaderContainer\";\r\nimport ImageView from \"../../ImageView/components/ImageViewContainer\";\r\nimport {Toaster} from \"./Toaster\";\r\nimport {theme} from \"../../common/theme\";\r\n\r\nconst App = (props) => {\r\n  const {\r\n    showToaster,\r\n    toasterMessage,\r\n    dismissToaster,\r\n    displayUploader\r\n  } = props;\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppWrapper>\r\n      <Header/>\r\n      {displayUploader ?  <UploaderView/> : <ImageView/>}\r\n      {showToaster && <Toaster message={toasterMessage} dismissToaster={dismissToaster}/>}\r\n    </AppWrapper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppWrapper = styled.div `\r\n    background: ${({theme}) => `transparent linear-gradient(201deg, ${theme.backgroundGradientLight} 0%, ${theme.backgroundGradientDark} 100%) 0% 0% no-repeat padding-box`};\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;","const get = state => state.app;\r\n\r\nexport const getShowToaster = state => get(state).showToaster;\r\nexport const getToasterMessage = state => get(state).toasterMessage;\r\nexport const getShouldDisplayUploader = state => get(state).displayUploader;","import {connect} from 'react-redux';\r\nimport App from \"./App\";\r\nimport {getShowToaster, getToasterMessage, getShouldDisplayUploader} from \"../data/selectors\";\r\nimport {dismissToaster} from \"../data/actions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    showToaster: getShowToaster(state), \r\n    toasterMessage: getToasterMessage(state),\r\n    displayUploader: getShouldDisplayUploader(state)\r\n});\r\n\r\nconst mapDispatchToProps = ({\r\n    dismissToaster\r\n});\r\n\r\nconst AppContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(App);\r\n\r\nexport default AppContainer;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actions from './actions';\r\nimport * as appActions from \"../../App/data/actions\";\r\n\r\nconst defaultState = {\r\n    file: null,\r\n    name: ''\r\n}\r\n\r\nexport const file = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case actions.HANDLE_PHOTO_UPLOADED:\r\n            return {\r\n                ...state,\r\n                file: action.payload,\r\n                name: action.payload.name || defaultState.name\r\n            }\r\n        case appActions.DISMISS_TOASTER:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default file;","import * as actions from \"./actions\";\r\nimport * as ImageViewActions from \"../../ImageView/data/actions\";\r\n\r\nconst defaultState = {\r\n    showToaster: false,\r\n    toasterMessage: '',\r\n    displayUploader: true\r\n};\r\n\r\nexport const appReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case actions.SHOW_TOASTER:\r\n            const toasterMessage = action.payload;\r\n            return {\r\n                ...state,\r\n                showToaster: true,\r\n                toasterMessage\r\n            };\r\n        case actions.DISMISS_TOASTER:\r\n            return {\r\n                ...state,\r\n                showToaster: false,\r\n                toasterMessage: ''\r\n            }\r\n        case ImageViewActions.HANDLE_PHOTO_UPLOADED:\r\n            return {\r\n                ...state,\r\n                displayUploader: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as actions from './actions';\r\nimport * as photoViewerActions from '../../ImageView/data/actions';\r\nimport {RENDER_TYPE} from './constants';\r\n\r\nconst defaultState = {\r\n    renderType: RENDER_TYPE.DEFAULT,\r\n    renderParams: {}\r\n}\r\n\r\nexport const renderConfig = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case photoViewerActions.HANDLE_PHOTO_UPLOADED:\r\n            return defaultState;\r\n        case actions.UPDATE_RENDER_TYPE:\r\n            return {\r\n                ...state,\r\n                renderType: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default renderConfig;","import { combineReducers } from \"redux\";\r\nimport photoDetailsReducer from '../modules/ImageView/data/reducer';\r\nimport {appReducer} from \"../modules/App/data/reducer\";\r\nimport {renderConfig} from \"../modules/Pixelizer/data/reducer\";\r\n\r\n/**\r\n * defining the state root reducer\r\n * here we will map all the reducers from the modules\r\n */\r\nexport default combineReducers({\r\n    app: appReducer,\r\n    uploadedPhoto: photoDetailsReducer,\r\n    renderConfig: renderConfig\r\n});\r\n\r\n","import {all, select, put, takeLatest} from 'redux-saga/effects'\r\nimport * as pixelizerActions from './actions';\r\nimport {getRenderConfig} from './selectors';\r\nimport {RENDER_TYPE} from './constants';\r\n\r\nfunction * handlePixerlizerActivated(action) {\r\n    const {renderType: type} = yield select(getRenderConfig);\r\n    // yield console.log(type === RENDER_TYPE.DEFAULT); if not pixeled already\r\n    if (type === RENDER_TYPE.DEFAULT) {\r\n        // set initial pixelizer configs\r\n        yield put(pixelizerActions.updateRenderType(RENDER_TYPE.PIXELED));\r\n    } else {\r\n        // set current pixelizer configs\r\n        yield put(pixelizerActions.updateRenderType(type));\r\n    }\r\n};\r\n\r\nexport default function * saga() {\r\n    yield all([takeLatest(pixelizerActions.PIXELIZER_ACTIVATED, handlePixerlizerActivated)]);\r\n}","import {all} from 'redux-saga/effects';\r\nimport pixelizerSaga from '../modules/Pixelizer/data/saga';\r\n\r\n/**\r\n * main saga file\r\n */\r\nexport default function* saga() {\r\n    yield all([\r\n        pixelizerSaga()\r\n    ]);\r\n}\r\n\r\n","import {createStore, applyMiddleware,compose} from \"redux\";\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './reducer';\r\nimport rootSaga from './saga';\r\n\r\n// sagaMiddleware controls all the side-effects like fetching data from the server.\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [\r\n    // Add other middleware on this line...\r\n    sagaMiddleware,\r\n];\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n    )\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './modules/App/components/AppContainer';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./store/store\";\r\nimport Provider from \"react-redux/es/components/Provider\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}